<beans xmlns:sec="http://www.springframework.org/schema/security"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
       xsi:schemaLocation="
             http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
             http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
             http://www.springframework.org/schema/security/oauth2
	         http://www.springframework.org/schema/security/spring-security-oauth2.xsd">

    <sec:http pattern="/oauth/token" create-session="stateless"
              authentication-manager-ref="clientAuthenticationManager">
        <sec:anonymous enabled="false"/>
        <sec:http-basic entry-point-ref="clientAuthenticationEntryPoint"/>
        <sec:access-denied-handler ref="oauthAccessDeniedHandler"/>

        <sec:form-login/>
    </sec:http>

    <sec:authentication-manager id="clientAuthenticationManager"
                                xmlns="http://www.springframework.org/schema/security">
        <sec:authentication-provider user-service-ref="clientDetailsUserService"/>
    </sec:authentication-manager>

    <bean id="clientDetailsUserService"
          class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
        <constructor-arg ref="clientDetailsService"/>
    </bean>

    <bean id="clientAuthenticationEntryPoint"
          class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
        <property name="realmName" value="test/client"/>
        <property name="typeName" value="Basic"/>
    </bean>

    <bean id="oauthAccessDeniedHandler"
          class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />

    <sec:authentication-manager id="authenticationManager">
        <sec:authentication-provider>
            <sec:user-service>
                <sec:user name="olivier" password="knoware" authorities="ROLE_USER,ROLE_ADMIN"/>
                <sec:user name="user" password="password" authorities="ROLE_USER"/>
            </sec:user-service>
        </sec:authentication-provider>
    </sec:authentication-manager>

    <bean id="clientCredentialsTokenEndpointFilter"
          class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
    </bean>

    <bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore"/>

    <bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <property name="tokenStore" ref="tokenStore"/>
        <property name="supportRefreshToken" value="true"/>
        <property name="clientDetailsService" ref="clientDetailsService"/>
        <property name="accessTokenValiditySeconds" value="604800"/> <!-- 1 week -->
    </bean>


    <oauth:client-details-service id="clientDetailsService">
        <oauth:client
                client-id="frontend" secret="app1"
                authorized-grant-types="password,refresh_token"
                authorities="ROLE_APP1"
                scope="read, write"
        />
        <oauth:client
                client-id="frontend" secret="app2"
                authorized-grant-types="password,refresh_token"
                authorities="ROLE_APP2"
                scope="read, write"
        />
    </oauth:client-details-service>

    <oauth:authorization-server client-details-service-ref="clientDetailsService" token-services-ref="tokenServices">
        <oauth:authorization-code/>
        <oauth:implicit/>
        <oauth:refresh-token/>
        <oauth:client-credentials/>
        <oauth:password/>
    </oauth:authorization-server>

</beans>